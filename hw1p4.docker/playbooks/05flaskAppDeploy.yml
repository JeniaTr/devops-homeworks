---
  -hosts: PROD_WEB
  user: "{{ USER }}"
  vars_files:
    - ../vars.yml

  tasks:
    - name: Create directory
      become: true
      file: path=/var/www
        mode=0755
        owner="{{ USER }}"
        group=www-data
        state=directory

    - name: Create app directory
      file:
        path: "{{ PROJECT_HOME }}"
        state: directory
        # owner: "{{ USER }}"

    - name: Create templates directory
      file:
        path: "{{ PROJECT_HOME }}/templates"
        state: directory
        # owner: "{{ USER }}"

    - name: Copy app to directory
      copy:
        src: "{{ item }}"
        dest: "{{ PROJECT_HOME }}"
        # owner: "{{ USER }}"
      with_fileglob:
        - "{{ LOCAL_PROJECT_HOME }}/*"

    - name: Copy templates to directory
      copy:
        src: "{{ item }}"
        dest: "{{ PROJECT_HOME }}/templates"
        # owner: "{{ USER }}"
      with_fileglob:
        - "{{ LOCAL_PROJECT_HOME }}/templates/*"

#############################
    # - name: update cache
    #   raw: "sudo apt-get update && sudo apt-get -y upgrade"
    #   become: yes

######################################
    - name: Create app directory
      file:
        path: "/etc/nginx/cert"
        state: directory
      become: true

    - name: Copy Nginx files - with different permissions
      become: true
      copy:
        src: "{{LOCAL_NGINX_HOME}}/{{ item.src }}"
        dest: "{{ item.dest }}"
        mode: "{{ item.mode }}"
      with_items:
        - { src: 'ssl.conf',dest: '/etc/nginx/', mode: '0644'}
        - { src: 'nginx-selfsigned.crt',dest: '/etc/nginx/cert', mode: '0644'}
        - { src: 'dhparam.pem',dest: '/etc/nginx/cert', mode: '0644'}
        - { src: 'nginx-selfsigned.key',dest: '/etc/nginx/cert', mode: '0600'}

    - name: Copy Nginx files - {{ app_name }}.conf
      template:
        src: "{{item}}"
        dest: "/etc/nginx/sites-available"
      with_fileglob:
        - "{{LOCAL_NGINX_HOME}}/{{ app_name }}.conf"
      become: true

    # - name: Create symlink for nginx
    #   become: yes
    #   file:
    #     src: /etc/nginx/sites-available/{{ app_name }}.conf
    #     dest: /etc/nginx/sites-enabled/{{ app_name }}.conf
    #     state: link

    # - name: Restart Nginx
    #   become: yes
    #   systemd:
    #     name: nginx
    #     enabled: yes
    #     state: restarted
    #     daemon_reload: yes
